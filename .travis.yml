sudo: required
jobs:
  include:
    - stage: 'Tests' # naming the Tests stage
      name: 'Unit Tests' # names the first Tests stage job
      language: elixir
      elixir:
        - 1.8
      otp_release:
        - 21.0
      cache:
        directories:
          - _build
          - deps
          - assets/node_modules
      addons:
        postgresql: '9.6'
      services:
        - postgresql
      before_install:
        - export DISPLAY=:99.0
        - sh -e /etc/init.d/xvfb start
        - export CHROMEDRIVER_VERSION=`curl -s http://chromedriver.storage.googleapis.com/LATEST_RELEASE`
        - curl -L -O "http://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip"
        - unzip chromedriver_linux64.zip
        - sudo chmod +x chromedriver
        - sudo mv chromedriver /usr/local/bin
      before_script:
        - psql -c 'create database app_template_test;' -U postgres
      install:
        - mix local.hex --force
        - mix local.rebar --force
        - mix deps.get
        - npm install --prefix assets
      script:
        - mix test
        - npm test --prefix assets
    - stage: 'Tests' # naming the Tests stage
      name: 'Integration Tests' # names the first Tests stage job
      language: elixir
      elixir:
        - 1.8
      otp_release:
        - 21.0
      cache:
        directories:
          - _build
          - deps
          - assets/node_modules
      addons:
        postgresql: '9.6'
      before_install:
        - export DISPLAY=:99.0
        - sh -e /etc/init.d/xvfb start
        - export CHROMEDRIVER_VERSION=`curl -s http://chromedriver.storage.googleapis.com/LATEST_RELEASE`
        - curl -L -O "http://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip"
        - unzip chromedriver_linux64.zip
        - sudo chmod +x chromedriver
        - sudo mv chromedriver /usr/local/bin
      services:
        - postgresql
      before_script:
        - psql -c 'create database app_template_test;' -U postgres
      install:
        - mix local.hex --force
        - mix local.rebar --force
        - mix deps.get
        - npm install --prefix assets
      script:
        - mix integration
    - stage: deploy
      name: 'Deploy'
      if: branch = master
      script: skip
      deploy:
        - provider: deis
          controller: deis.prod.revelry.net
          app: app-template
          cli_version: v2.20.0
          username: '$DEIS_USERNAME'
          password: '$DEIS_PASSWORD'
          on:
            branch: master
      after_deploy:
        - ./deis run "_build/prod/rel/app_template/bin/app_template migrate" -a app-template
